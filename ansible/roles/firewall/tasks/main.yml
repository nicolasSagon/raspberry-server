- name: Enable IP forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
    sysctl_set: yes
    reload: yes

- name: Set iptables rules with VPN kill switch
  copy:
    dest: /etc/iptables/rules.v4
    content: |
      *nat
      :POSTROUTING ACCEPT [0:0]
      # SEUL le trafic VPN est autorisé à sortir
      -A POSTROUTING -o tun0 -j MASQUERADE
      COMMIT

      *filter
      :INPUT DROP [0:0]
      :FORWARD DROP [0:0]
      :OUTPUT DROP [0:0]
      
      # ═══════════════════════════════════════════════════════════════
      # KILL SWITCH : Bloquer TOUT sauf VPN et trafic local
      # ═══════════════════════════════════════════════════════════════
      
      # 1. Autoriser le loopback (nécessaire pour le système)
      -A INPUT -i lo -j ACCEPT
      -A OUTPUT -o lo -j ACCEPT
      
      # 2. Autoriser les connexions établies et liées
      -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
      -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
      
      # 3. SSH : Autoriser SEULEMENT depuis le réseau local Ethernet
      -A INPUT -i eth0 -s 192.168.1.0/24 -p tcp --dport 22 -j ACCEPT
      
      # 4. KILL SWITCH : Autoriser SEULEMENT le trafic VPN sortant
      # Autoriser la connexion initiale au serveur VPN (avant que tun0 existe)
      -A OUTPUT -p udp --dport 1194 -j ACCEPT
      -A OUTPUT -o tun+ -j ACCEPT
      
      # 5. Bloquer EXPLICITEMENT tout trafic vers Internet sauf VPN
      # Bloquer eth0 vers Internet (empêche les fuites)
      -A OUTPUT -o eth0 ! -d 192.168.1.0/24 -j DROP
      # Bloquer wlan0 vers Internet si pas de VPN
      -A OUTPUT -o wlan0 ! -d 10.0.0.0/24 -j DROP
      
      # ═══════════════════════════════════════════════════════════════
      # TRAFIC RESEAU LOCAL (Wi-Fi AP)
      # ═══════════════════════════════════════════════════════════════
      
      # 6. Wi-Fi AP : Trafic local entre clients
      -A INPUT -i wlan0 -s 10.0.0.0/24 -j ACCEPT
      -A OUTPUT -o wlan0 -d 10.0.0.0/24 -j ACCEPT
      
      # 7. DHCP pour les clients Wi-Fi
      -A INPUT -i wlan0 -p udp --dport 67 -j ACCEPT
      -A OUTPUT -o wlan0 -p udp --sport 67 -j ACCEPT
      
      # 8. DNS pour les clients Wi-Fi
      -A INPUT -i wlan0 -p udp --dport 53 -j ACCEPT
      -A INPUT -i wlan0 -p tcp --dport 53 -j ACCEPT
      
      # ═══════════════════════════════════════════════════════════════
      # VPN FORWARDING (SEULEMENT si tun0 existe)
      # ═══════════════════════════════════════════════════════════════
      
      # 9. Autoriser le forwarding SEULEMENT vers le VPN
      -A FORWARD -i wlan0 -o tun+ -j ACCEPT
      -A FORWARD -i tun+ -o wlan0 -j ACCEPT
      
      # 10. BLOQUER explicitement le forwarding vers eth0 (kill switch)
      -A FORWARD -i wlan0 -o eth0 -j DROP
      
      # ═══════════════════════════════════════════════════════════════
      # K3S SECURITY (seulement depuis VPN network)
      # ═══════════════════════════════════════════════════════════════
      
      # 11. K3s API Server
      -A INPUT -s 10.0.0.0/24 -p tcp --dport 6443 -j ACCEPT
      -A INPUT -s 192.168.1.0/24 -p tcp --dport 6443 -j DROP
      
      # 12. K3s Kubelet
      -A INPUT -s 10.0.0.0/24 -p tcp --dport 10250 -j ACCEPT
      -A INPUT -s 192.168.1.0/24 -p tcp --dport 10250 -j DROP
      
      # 13. K3s NodePort services
      -A INPUT -s 10.0.0.0/24 -p tcp --dport 30000:32767 -j ACCEPT
      -A INPUT -s 192.168.1.0/24 -p tcp --dport 30000:32767 -j DROP
      
      # 14. K3s Internal cluster communication
      -A INPUT -s 10.42.0.0/16 -p udp --dport 8472 -j ACCEPT
      -A INPUT -s 10.43.0.0/16 -j ACCEPT
      -A INPUT -s 10.0.0.0/24 -p udp --dport 8472 -j ACCEPT
      
      # ═══════════════════════════════════════════════════════════════
      # LOGGING des tentatives de fuite (debug)
      # ═══════════════════════════════════════════════════════════════
      
      # 15. Logger les tentatives de connexion bloquées
      -A OUTPUT -o eth0 ! -d 192.168.1.0/24 -j LOG --log-prefix "KILL-SWITCH-ETH0: "
      -A FORWARD -i wlan0 -o eth0 -j LOG --log-prefix "KILL-SWITCH-FORWARD: "
      
      COMMIT

- name: Reload iptables
  shell: iptables-restore < /etc/iptables/rules.v4